{"version":3,"sources":["github.jpg","../../src/index.tsx","index.tsx"],"names":["module","exports","getFormDataObject","formElement","Object","FormData","props","rest","formRef","useRef","React","ref","onSubmit","event","formData","onChange","App","className","console","clear","log","reset","htmlFor","type","name","id","placeholder","role","aria-label","target","rel","href","width","alt","src","GithubLogo","ReactDOM","render","document","getElementById"],"mappings":"qIAAAA,EAAOC,QAAU,IAA0B,oC,yICqBrCC,EAAqBC,YACzB,OAAOC,mBAAuC,IAAIC,SAAlD,K,EAGYC,YAAD,IACL,EAAN,EAAM,WAAN,EAAM,WAAN,EAAM,SAAmCC,EAD9B,YACX,EADW,oCAELC,EAAUC,iBAAhB,MAiBA,OACEC,wCACEC,IAAKH,EACLI,SAlBkBC,YAEpB,GADAA,mBACA,MAAID,EAAkB,CACpB,IAAME,EAAWZ,EAAkBM,EAAnC,SACAI,EAASE,EAAUN,EAAnBI,WAeAG,SAXiB,WACnB,SAAIA,EAAkB,CACpB,IAAMD,EAAWZ,EAAkBM,EAAnC,SACAO,EAASD,EAAUN,EAAnBO,YAKFL,GADF,I,gBCrCIM,G,MAAM,WAWV,OACE,yBAAKC,UAAU,aACb,4BAAK,YACL,wBAAIA,UAAU,iBAAd,8BAEA,kBAAC,EAAD,CAAML,SAfuB,SAACE,EAAUX,GAC1Ce,QAAQC,QACRD,QAAQE,IAAI,aAAcN,GAC1BX,EAAYkB,SAYoBN,SATD,SAACD,GAChCI,QAAQE,IAAI,aAAcN,KAStB,yBAAKG,UAAU,cACb,2BAAOK,QAAQ,QAAf,UACA,2BACEL,UAAU,eACVM,KAAK,OACLC,KAAK,OACLC,GAAG,OACHC,YAAY,UAIhB,4BAAQH,KAAK,SAASN,UAAU,mBAAhC,WAKF,yBAAKA,UAAU,oBACb,mEACuC,IACrC,0BAAMU,KAAK,MAAMC,aAAW,UAA5B,kBAMJ,yBAAKX,UAAU,eACb,uBACEY,OAAO,SACPC,IAAI,sBACJC,KAAK,iDAEL,yBAAKC,MAAM,OAAOC,IAAI,SAASC,IAAKC,WAO9CC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7410b8a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.45be349d.jpg\";","import React, { useRef } from 'react'\n\nexport interface FormDataObject {\n  [key: string]: FormDataEntryValue\n}\n\nexport type HandleForm = (\n  formData: FormDataObject,\n  formElement: HTMLFormElement\n) => void\n\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>\n\ninterface ReactFormProps\n  extends Omit<React.HTMLProps<HTMLFormElement>, 'onSubmit' | 'onChange'> {}\n\ninterface FormProps extends ReactFormProps {\n  onSubmit?: HandleForm\n  onChange?: HandleForm\n}\n\nconst getFormDataObject = (formElement: HTMLFormElement): FormDataObject => {\n  return Object.fromEntries<FormDataEntryValue>(new FormData(formElement))\n}\n\nconst Form = (props: FormProps): JSX.Element => {\n  const { onSubmit, onChange, children, ...rest } = props\n  const formRef = useRef<HTMLFormElement>(null)\n\n  const handleSubmit = (event: React.FormEvent): void => {\n    event.preventDefault()\n    if (onSubmit != null) {\n      const formData = getFormDataObject(formRef.current as HTMLFormElement)\n      onSubmit(formData, formRef.current as HTMLFormElement)\n    }\n  }\n\n  const handleChange = (): void => {\n    if (onChange != null) {\n      const formData = getFormDataObject(formRef.current as HTMLFormElement)\n      onChange(formData, formRef.current as HTMLFormElement)\n    }\n  }\n\n  return (\n    <form\n      ref={formRef}\n      onSubmit={handleSubmit}\n      onChange={handleChange}\n      {...rest}\n    >\n      {children}\n    </form>\n  )\n}\n\nexport default Form\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Form, { HandleForm } from 'react-component-form'\n\nimport GithubLogo from './github.jpg'\nimport './index.css'\n\nconst App = () => {\n  const handleSubmit: HandleForm = (formData, formElement) => {\n    console.clear()\n    console.log('onSubmit: ', formData)\n    formElement.reset()\n  }\n\n  const handleChange: HandleForm = (formData) => {\n    console.log('onChange: ', formData)\n  }\n\n  return (\n    <div className='container'>\n      <h2>{'<Form />'}</h2>\n      <h5 className='title-install'>npm i react-component-form</h5>\n\n      <Form onSubmit={handleSubmit} onChange={handleChange}>\n        <div className='form-group'>\n          <label htmlFor='name'>Name :</label>\n          <input\n            className='form-control'\n            type='text'\n            name='name'\n            id='name'\n            placeholder='name'\n          />\n        </div>\n\n        <button type='submit' className='btn btn-primary'>\n          Submit\n        </button>\n      </Form>\n\n      <div className='result-container'>\n        <h4>\n          Try the form and Inspect the console{' '}\n          <span role='img' aria-label='smiley'>\n            ðŸ˜ƒ\n          </span>\n        </h4>\n      </div>\n\n      <div className='github-logo'>\n        <a\n          target='_blank'\n          rel='noopener noreferrer'\n          href='https://github.com/Divlo/react-component-form'\n        >\n          <img width='30px' alt='github' src={GithubLogo} />\n        </a>\n      </div>\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}